/*!
 * AngularJS Material Design
 * https://github.com/angular/material
 * @license MIT
 * v1.1.10-master-c60f15862
 */
function MdTooltipDirective(y,g,E,$,x,T,w,P){var D="focus touchstart mouseenter",O="blur touchcancel mouseleave",V={top:{x:w.xPosition.CENTER,y:w.yPosition.ABOVE},right:{x:w.xPosition.OFFSET_END,y:w.yPosition.CENTER},bottom:{x:w.xPosition.CENTER,y:w.yPosition.BELOW},left:{x:w.xPosition.OFFSET_START,y:w.yPosition.CENTER}};return{restrict:"E",priority:210,scope:{mdZIndex:"=?mdZIndex",mdDelay:"=?mdDelay",mdVisible:"=?mdVisible",mdAutohide:"=?mdAutohide",mdDirection:"@?mdDirection"},link:function(l,o,a){var n,e,r,d,s,c="md-tooltip-"+T.nextUid(),u=T.getParentWithPointerEvents(o),m=E.throttle(b),p=!1,f=null;function t(){l.mdZIndex=l.mdZIndex||100,l.mdDelay=l.mdDelay||0,V[l.mdDirection]||(l.mdDirection="bottom")}function i(e){var t=e||x(o.text().trim())(l.$parent);(!u.attr("aria-label")&&!u.attr("aria-labelledby")||u.attr("md-labeled-by-tooltip"))&&(u.attr("aria-label",t),u.attr("md-labeled-by-tooltip")||u.attr("md-labeled-by-tooltip",c))}function b(){t(),d&&d.panelEl&&d.panelEl.removeClass(n),n="md-origin-"+l.mdDirection,e=V[l.mdDirection],r=w.newPanelPosition().relativeTo(u).addPanelPosition(e.x,e.y),d&&d.panelEl&&(d.panelEl.addClass(n),d.updatePosition(r))}function h(e){h.queued&&h.value===!!e||!h.queued&&l.mdVisible===!!e||(h.value=!!e,h.queued||(e?(h.queued=!0,s=y(function(){l.mdVisible=h.value,h.queued=!1,s=null,l.visibleWatcher||v(l.mdVisible)},l.mdDelay)):T.nextTick(function(){l.mdVisible=!1,l.visibleWatcher||v(!1)})))}function v(e){e?function(){if(!o[0].textContent.trim())throw new Error("Text for the tooltip has not been provided. Please include text within the mdTooltip element.");if(!d){var e=angular.element($[0].body),t=w.newPanelAnimation().openFrom(u).closeTo(u).withAnimation({open:"md-show",close:"md-hide"}),i={id:c,attachTo:e,contentElement:o,propagateContainerEvents:!0,panelClass:"md-tooltip",animation:t,position:r,zIndex:l.mdZIndex,focusOnOpen:!1,onDomAdded:function(){d.panelEl.addClass(n)}};d=w.create(i)}d.open().then(function(){d.panelEl.attr("role","tooltip")})}():d&&d.close()}t(),i(),o.detach(),b(),function(){if(u[0]&&"MutationObserver"in g){var e=new g.MutationObserver(function(e){e.some(function(e){return"disabled"===e.attributeName&&u[0].disabled})});e.observe(u[0],{attributes:!0})}function t(){h(!1)}function i(){f=$[0].activeElement===u[0]}function o(e){"focus"===e.type&&f?f=!1:l.mdVisible||(u.on(O,n),h(!0),"touchstart"===e.type&&u.one("touchend",function(){T.nextTick(function(){$.one("touchend",n)},!1)}))}function n(){((l.hasOwnProperty("mdAutohide")?l.mdAutohide:a.hasOwnProperty("mdAutohide"))||p||$[0].activeElement!==u[0])&&(s&&(y.cancel(s),h.queued=!1,s=null),u.off(O,n),u.triggerHandler("blur"),h(!1)),p=!1}function r(){p=!0}f=!1,P.register("scroll",t,!0),P.register("blur",i),P.register("resize",m),l.$on("$destroy",function(){P.deregister("scroll",t,!0),P.deregister("blur",i),P.deregister("resize",m),u.off(D,o).off(O,n).off("mousedown",r),n(),e&&e.disconnect()}),u.on("mousedown",r),u.on(D,o)}(),function(){if(o[0]&&"MutationObserver"in g){var e=new g.MutationObserver(function(e){e.forEach(function(e){"md-visible"!==e.attributeName||l.visibleWatcher||(l.visibleWatcher=l.$watch("mdVisible",v))})});e.observe(o[0],{attributes:!0}),a.hasOwnProperty("mdVisible")&&(l.visibleWatcher=l.$watch("mdVisible",v))}else l.visibleWatcher=l.$watch("mdVisible",v);l.$watch("mdDirection",b),o.one("$destroy",t),u.one("$destroy",t),l.$on("$destroy",function(){h(!1),d&&d.destroy(),e&&e.disconnect(),o.remove()}),-1<o.text().indexOf(x.startSymbol())&&l.$watch(function(){return o.text().trim()},i);function t(){l.$destroy()}}()}}}function MdTooltipRegistry(r){var l={},a=angular.element(r);return{register:function(e,t,i){var o=l[e]=l[e]||[];o.length||(i?r.addEventListener(e,d,!0):a.on(e,d));-1===o.indexOf(t)&&o.push(t)},deregister:function(e,t,i){var o=l[e],n=o?o.indexOf(t):-1;-1<n&&(o.splice(n,1),0===o.length&&(i?r.removeEventListener(e,d,!0):a.off(e,d)))}};function d(t){l[t.type]&&l[t.type].forEach(function(e){e.call(this,t)},this)}}goog.provide("ngmaterial.components.tooltip"),goog.require("ngmaterial.components.panel"),goog.require("ngmaterial.core"),MdTooltipRegistry.$inject=["$window"],MdTooltipDirective.$inject=["$timeout","$window","$$rAF","$document","$interpolate","$mdUtil","$mdPanel","$$mdTooltipRegistry"],angular.module("material.components.tooltip",["material.core","material.components.panel"]).directive("mdTooltip",MdTooltipDirective).service("$$mdTooltipRegistry",MdTooltipRegistry),ngmaterial.components.tooltip=angular.module("material.components.tooltip");